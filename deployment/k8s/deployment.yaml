apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonar-cloud-exporter
  namespace: golden-state  
  labels:
    app.kubernetes.io/name: sonar-cloud-exporter
    app.kubernetes.io/part-of: golden-state
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/language: go
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sonar-cloud-exporter
      app.kubernetes.io/part-of: golden-state
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonar-cloud-exporter
        app.kubernetes.io/part-of: golden-state
        app.kubernetes.io/component: backend
      annotations:
        ad.datadoghq.com/sonar-cloud-exporter.checks: |
          {
            "openmetrics": {
                "instances": [
                    {
                        "openmetrics_endpoint": "http://%%host%%:8080/metrics",
                        "metrics": ["sonarcloud_quality_gate"]
                    }
                ]
            }
          }
    spec:
      containers:
        - name: sonar-cloud-exporter
          image: "lokesh28/sonar-quality-gate-exporter:1.0.0"
          imagePullPolicy: Always
          env:
          - name: ORGANIZATION
            valueFrom:
              secretKeyRef:
                name: sonarcloud-secret
                key: organization
          - name: SC_TOKEN
            valueFrom:
              secretKeyRef:
                name: sonarcloud-secret
                key: sc_token
          - name: LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: sonarcloud-config
                key: LISTEN_ADDRESS
          - name: LISTEN_PATH
            valueFrom:
              configMapKeyRef:
                name: sonarcloud-config
                key: LISTEN_PATH
          - name: METRICS_NAME
            valueFrom:
              configMapKeyRef:
                name: sonarcloud-config
                key: METRICS_NAME
          ports:
            - containerPort: 8080
              name: metrics
              protocol: TCP
          resources:
            limits:
              memory: "500Mi"
            requests:
              cpu: "50m"
              memory: "300Mi"
